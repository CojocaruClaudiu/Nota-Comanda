generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id                  String   @id @default(uuid())
  name                String
  location            String
  contact             String
  registrulComertului String?  @unique
  cif                 String?  @unique
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Employee {
  id             String    @id @default(uuid())
  name           String
  cnp            String?  @unique // Cod Numeric Personal
  qualifications String[]
  hiredAt        DateTime
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  birthDate      DateTime?
  cars           Car[]
  leaves         Leave[]
}

model Leave {
  id         String    @id @default(uuid())
  employeeId String
  startDate  DateTime
  endDate    DateTime?
  days       Int
  note       String?
  createdAt  DateTime  @default(now())
  employee   Employee  @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}

model Car {
  id          String    @id @default(uuid())
  vin         String    @unique
  marca       String
  model       String
  an          Int
  culoare     String?
  placute     String    @unique
  driverId    String?
  driverNote  String?
  combustibil FuelType?
  expItp      DateTime?
  expRca      DateTime?
  expRovi     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  driver      Employee? @relation(fields: [driverId], references: [id])

  @@index([expItp])
  @@index([expRca])
  @@index([expRovi])
}

model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  name         String?
  passwordHash String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  roles        UserRole[]
}

model Role {
  id    Int        @id @default(autoincrement())
  name  RoleName   @unique
  users UserRole[]
}

model UserRole {
  userId Int
  roleId Int
  role   Role @relation(fields: [roleId], references: [id], onDelete: Cascade)
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
}

enum FuelType {
  MOTORINA
  BENZINA
  BENZINA_GPL
  HIBRID_MOTORINA
  HIBRID_BENZINA
  ELECTRIC
  ALT
}

enum RoleName {
  ADMIN
  MANAGER
  STAFF
  VIEWER
}
